name: Build FFmpeg for Raspberry Pi 4B

on: 
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    # 移除了直接容器声明，改用 QEMU 模拟 ARM 环境

    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build ARM64 container
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.arm64
        platforms: linux/arm64
        push: false
        load: true

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends \
          autoconf automake build-essential cmake git libtool \
          libomxil-bellagio-dev libx264-dev libx265-dev libvpx-dev \
          libmp3lame-dev libopus-dev libvorbis-dev libfreetype6-dev \
          yasm pkg-config meson ninja-build libdrm-dev \
          libssl-dev zlib1g-dev ca-certificates

    - name: Clone FFmpeg
      run: |
        git clone --depth 1 https://github.com/FFmpeg/FFmpeg.git
        cd FFmpeg

    - name: Configure and Build
      run: |
        cd FFmpeg
        ./configure \
          --prefix="/usr/local" \
          --enable-shared \
          --enable-pic \
          --enable-gpl \
          --enable-version3 \
          --enable-nonfree \
          --enable-libdrm \
          --enable-libfreetype \
          --enable-libmp3lame \
          --enable-libopus \
          --enable-libvorbis \
          --enable-libx264 \
          --enable-libx265 \
          --enable-libvpx \
          --enable-mmal \
          --enable-omx \
          --enable-omx-rpi \
          --enable-v4l2-m2m \
          --enable-opengl \
          --extra-cflags="-mcpu=cortex-a72 -mtune=cortex-a72 -mfpu=neon-fp-armv8 -mfloat-abi=hard -O3" \
          --extra-ldflags="-L/opt/vc/lib" \
          --arch=aarch64 \
          --enable-neon \
          --enable-hardcoded-tables \
          --disable-stripping \
          --enable-lto

        make -j$(($(nproc) + 1))
        make install DESTDIR="$HOME/ffmpeg_install"

    - name: Create package
      run: |
        mkdir -p artifacts
        tar -czvf artifacts/ffmpeg_rpi4b.tar.gz -C $HOME/ffmpeg_install usr/local

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ffmpeg_rpi4b_build
        path: artifacts/ffmpeg_rpi4b.tar.gz
        retention-days: 7
